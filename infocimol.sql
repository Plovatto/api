-- MySQL Script generated by MySQL Workbench
-- Sat Jul  8 13:59:27 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema infocimol
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema infocimol
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `infocimol` DEFAULT CHARACTER SET utf8 ;
USE `infocimol` ;

-- -----------------------------------------------------
-- Table `infocimol`.`professor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `infocimol`.`professor` (
  `pessoa_id_pessoa` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`pessoa_id_pessoa`),
  UNIQUE INDEX `pessoa_id_pessoa_UNIQUE` (`pessoa_id_pessoa` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `infocimol`.`disciplina`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `infocimol`.`disciplina` (
  `id_disciplina` INT NOT NULL,
  `nome` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_disciplina`),
  UNIQUE INDEX `nome_UNIQUE` (`nome` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `infocimol`.`topico`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `infocimol`.`topico` (
  `id_topico` INT NOT NULL,
  `enunciado` VARCHAR(250) NOT NULL,
  `professor_pessoa_id_pessoa` INT UNSIGNED NOT NULL,
  `disciplina_id_disciplina` INT NOT NULL,
  PRIMARY KEY (`id_topico`),
  UNIQUE INDEX `enunciado_UNIQUE` (`enunciado` ASC) VISIBLE,
  INDEX `fk_topico_professor_idx` (`professor_pessoa_id_pessoa` ASC) VISIBLE,
  INDEX `fk_topico_disciplina1_idx` (`disciplina_id_disciplina` ASC) VISIBLE,
  CONSTRAINT `fk_topico_professor`
    FOREIGN KEY (`professor_pessoa_id_pessoa`)
    REFERENCES `infocimol`.`professor` (`pessoa_id_pessoa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_topico_disciplina1`
    FOREIGN KEY (`disciplina_id_disciplina`)
    REFERENCES `infocimol`.`disciplina` (`id_disciplina`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `infocimol`.`questao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `infocimol`.`questao` (
  `id_questao` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `tipo` ENUM('acertativa', 'objetiva') NOT NULL,
  `nivel` ENUM('facil', 'medio', 'dificil') NOT NULL DEFAULT 'medio',
  `topico_id_topico` INT NOT NULL,
  `professor_pessoa_id_pessoa` INT UNSIGNED NOT NULL,
  `enunciado` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id_questao`),
  UNIQUE INDEX `id_disciplina_UNIQUE` (`id_questao` ASC) VISIBLE,
  INDEX `fk_questao_topico1_idx` (`topico_id_topico` ASC) VISIBLE,
  INDEX `fk_questao_professor1_idx` (`professor_pessoa_id_pessoa` ASC) VISIBLE,
  CONSTRAINT `fk_questao_topico1`
    FOREIGN KEY (`topico_id_topico`)
    REFERENCES `infocimol`.`topico` (`id_topico`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_questao_professor1`
    FOREIGN KEY (`professor_pessoa_id_pessoa`)
    REFERENCES `infocimol`.`professor` (`pessoa_id_pessoa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `infocimol`.`prova`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `infocimol`.`prova` (
  `id_prova` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `descricao` VARCHAR(45) NOT NULL,
  `formato` ENUM('PDF', 'DOCS', 'Word', 'Formulario') NOT NULL,
  `tipo` ENUM('Diagn√≥sticas', 'Formativas', 'Somativas', 'Comparativas') NOT NULL,
  `professor_pessoa_id_pessoa` INT UNSIGNED NOT NULL,
  `enunciado` VARCHAR(150) NOT NULL,
  PRIMARY KEY (`id_prova`),
  UNIQUE INDEX `id_turma_UNIQUE` (`id_prova` ASC) VISIBLE,
  UNIQUE INDEX `descricao_UNIQUE` (`descricao` ASC) VISIBLE,
  UNIQUE INDEX `formato_UNIQUE` (`formato` ASC) VISIBLE,
  UNIQUE INDEX `tipo_UNIQUE` (`tipo` ASC) VISIBLE,
  INDEX `fk_prova_professor1_idx` (`professor_pessoa_id_pessoa` ASC) VISIBLE,
  UNIQUE INDEX `enunciado_UNIQUE` (`enunciado` ASC) VISIBLE,
  CONSTRAINT `fk_prova_professor1`
    FOREIGN KEY (`professor_pessoa_id_pessoa`)
    REFERENCES `infocimol`.`professor` (`pessoa_id_pessoa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `infocimol`.`alternativa`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `infocimol`.`alternativa` (
  `id_alternativa` INT NOT NULL,
  `questao_id_questao` INT UNSIGNED NOT NULL,
  `enunciado` VARCHAR(150) NOT NULL,
  `correta` TINYINT NOT NULL,
  PRIMARY KEY (`id_alternativa`),
  INDEX `fk_alternativa_questao1_idx` (`questao_id_questao` ASC) VISIBLE,
  CONSTRAINT `fk_alternativa_questao1`
    FOREIGN KEY (`questao_id_questao`)
    REFERENCES `infocimol`.`questao` (`id_questao`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `infocimol`.`questao_prova`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `infocimol`.`questao_prova` (
  `questao_id_questao` INT UNSIGNED NOT NULL,
  `questao_id_questao1` INT UNSIGNED NOT NULL,
  `prova_id_prova` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`questao_id_questao`, `questao_id_questao1`, `prova_id_prova`),
  INDEX `fk_questao_prova_questao1_idx` (`questao_id_questao1` ASC) VISIBLE,
  INDEX `fk_questao_prova_prova1_idx` (`prova_id_prova` ASC) VISIBLE,
  CONSTRAINT `fk_questao_prova_questao1`
    FOREIGN KEY (`questao_id_questao1`)
    REFERENCES `infocimol`.`questao` (`id_questao`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_questao_prova_prova1`
    FOREIGN KEY (`prova_id_prova`)
    REFERENCES `infocimol`.`prova` (`id_prova`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `infocimol`.`alternativa_questao_prova`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `infocimol`.`alternativa_questao_prova` (
  `alternativa_id_alternativa` INT NOT NULL,
  `questao_prova_questao_id_questao` INT UNSIGNED NOT NULL,
  `questao_prova_questao_id_questao1` INT UNSIGNED NOT NULL,
  `questao_prova_prova_id_prova` INT UNSIGNED NOT NULL,
  `ordem` INT NULL,
  PRIMARY KEY (`alternativa_id_alternativa`, `questao_prova_questao_id_questao`, `questao_prova_questao_id_questao1`, `questao_prova_prova_id_prova`),
  INDEX `fk_alternativa_has_questao_prova_questao_prova1_idx` (`questao_prova_questao_id_questao` ASC, `questao_prova_questao_id_questao1` ASC, `questao_prova_prova_id_prova` ASC) VISIBLE,
  INDEX `fk_alternativa_has_questao_prova_alternativa1_idx` (`alternativa_id_alternativa` ASC) VISIBLE,
  CONSTRAINT `fk_alternativa_has_questao_prova_alternativa1`
    FOREIGN KEY (`alternativa_id_alternativa`)
    REFERENCES `infocimol`.`alternativa` (`id_alternativa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_alternativa_has_questao_prova_questao_prova1`
    FOREIGN KEY (`questao_prova_questao_id_questao` , `questao_prova_questao_id_questao1` , `questao_prova_prova_id_prova`)
    REFERENCES `infocimol`.`questao_prova` (`questao_id_questao` , `questao_id_questao1` , `prova_id_prova`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `infocimol`.`disciplina_professor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `infocimol`.`disciplina_professor` (
  `disciplina_id_disciplina` INT NOT NULL,
  `professor_pessoa_id_pessoa` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`disciplina_id_disciplina`, `professor_pessoa_id_pessoa`),
  INDEX `fk_disciplina_has_professor_professor1_idx` (`professor_pessoa_id_pessoa` ASC) VISIBLE,
  INDEX `fk_disciplina_has_professor_disciplina1_idx` (`disciplina_id_disciplina` ASC) VISIBLE,
  CONSTRAINT `fk_disciplina_has_professor_disciplina1`
    FOREIGN KEY (`disciplina_id_disciplina`)
    REFERENCES `infocimol`.`disciplina` (`id_disciplina`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_disciplina_has_professor_professor1`
    FOREIGN KEY (`professor_pessoa_id_pessoa`)
    REFERENCES `infocimol`.`professor` (`pessoa_id_pessoa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

